name: Auto Merge Branch A to B

on:
  workflow_dispatch:
    inputs:
      source_branch:
        description: 'Source branch (e.g., Branch A)'
        required: true
        default: 'branch-a'
      target_branch:
        description: 'Target branch (e.g., Branch B)'
        required: true
        default: 'branch-b'
      Deployto:
        type: environment
        description: 'Environment to deploy to (dev or qa)'
        required: true
        default: 'dev'

permissions:
  contents: write
  pull-requests: write
env:
  FEATURE_BRANCH: feature-genx-geny-merge
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
jobs:
  create-feature-branch-from-target-branch:
      if: inputs.Deployto == 'dev'
      name: Setup Feature Branch and PR (Dev)
      runs-on: ubuntu-latest

      steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
         token: ${{ secrets.GITHUB_TOKEN }}

      - name: Check if feature branch already exists
        id: check_branch
        run: |
         if git ls-remote --exit-code --heads origin $FEATURE_BRANCH; then
          echo "Branch already exists. Skipping creation."
          echo "exists=true" >> $GITHUB_OUTPUT
         else
          echo "Branch does not exist. Will create."
          echo "exists=false" >> $GITHUB_OUTPUT
         fi

      - name: Checkout target branch
        if: steps.check_branch.outputs.exists == 'false'
        uses: actions/checkout@v4
        with:
         ref: ${{ github.event.inputs.target_branch }}
         token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git
        if: steps.check_branch.outputs.exists == 'false'
        run: |
         git config user.name "github-actions"
         git config user.email "github-actions@github.com"

      - name: Create and push feature branch
        if: steps.check_branch.outputs.exists == 'false'
        run: |
         git checkout -b $FEATURE_BRANCH
         git push origin $FEATURE_BRANCH

  create-pr:
   if: inputs.Deployto == 'dev'
   name: Create PR from source → feature
   runs-on: ubuntu-latest
   outputs:
     pr_number: ${{ steps.save_pr.outputs.pr_number }}
   steps:
    - name: checkout source branch
      uses: actions/checkout@v4
      with:
        ref : ${{ github.event.inputs.source_branch }}
        token: ${{ secrets.GITHUB_TOKEN }}
    - name: Create Pull Request
      id: create_pr
      uses: peter-evans/create-pull-request@v6
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        base: ${{ env.FEATURE_BRANCH }}
        title: "PR: Merge '${{ github.event.inputs.source_branch }}' into '${{ env.FEATURE_BRANCH }}'"
        body: |
          Merging source branch into feature branch based on target `${{ github.event.inputs.target_branch }}`.

    - name: Save PR number
      id: save_pr
      run: echo "::set-output name=pr_number::${{ steps.create_pr.outputs.pull-request-number }}"    
      

  check-mergeability-dev:
    if: inputs.Deployto == 'dev'
    name: Check Merge Conflicts (Dev)
    needs: create-feature-branch-from-target-branch
    runs-on: ubuntu-latest

    steps:
      - name: Check PR mergeability
        id: check_merge
        uses: octokit/request-action@v2.x
        with:
          route: GET /repos/${{ github.repository }}/pulls/${{ env.PR_NUMBER }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Fail on conflict
        run: |
          echo "Mergeable: ${{ steps.check_merge.outputs.data__mergeable }}"
          if [[ "${{ steps.check_merge.outputs.data__mergeable }}" != "true" ]]; then
            echo "❌ Merge conflict detected. Please resolve manually."
            exit 1
          fi
  approval-dev-1:
    if: inputs.Deployto == 'dev'
    name: Approval 1 - Code Review
    needs: check-mergeability-dev
    runs-on: ubuntu-latest
    environment:
      name: review-approval
      url: https://github.com/${{ github.repository }}/pull/${{ env.PR_NUMBER }}

    steps:
      - run: echo "Awaiting approval"

  approval-dev-2:
    if: inputs.Deployto == 'dev'
    name: Approval 2 - Merge Source into Feature
    needs: approval-dev-1
    runs-on: ubuntu-latest
    environment:
      name: merge-approval
      url: https://github.com/${{ github.repository }}/pull/${{ env.PR_NUMBER }}

    steps:
      - run: echo "Awaiting final approval to merge source → feature branch."

  merge-dev-pr:
    if: inputs.Deployto == 'dev'
    name: Merge Source → Feature Branch
    needs: create-pr
    runs-on: ubuntu-latest
    steps:
      - name: Merge the PR
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = process.env.PR_NUMBER;
            const result = await github.rest.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber,
              merge_method: "merge"
            });
            console.log("✅ Merged source → feature:", result.data.merged);
