name: Create Pull Request

on:
  workflow_dispatch:
    inputs:
      source_branch:
        description: 'Source branch'
        required: true
        default: 'feature-branch'
      target_branch:
        description: 'Target branch'
        required: true
        default: 'main'
      pr_title:
        description: 'Pull request title'
        required: true
        default: 'Automated PR from feature-branch'
      pr_body:
        description: 'Pull request body'
        required: false
        default: 'This PR was created automatically using a workflow.'

jobs:
  open-pr:
    runs-on: ubuntu-latest
    steps:
      - name: Log inputs for debug
        run: |
          echo "Source branch: ${{ github.event.inputs.source_branch }}"
          echo "Target branch: ${{ github.event.inputs.target_branch }}"
          echo "PR title: ${{ github.event.inputs.pr_title }}"
          echo "PR body: ${{ github.event.inputs.pr_body }}"

      - name: Create Pull Request via GitHub API
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const sourceBranch = context.payload.inputs.source_branch;
            const targetBranch = context.payload.inputs.target_branch;
            const prTitle = context.payload.inputs.pr_title;
            const prBody = context.payload.inputs.pr_body;

            if (!sourceBranch || !targetBranch || !prTitle) {
              throw new Error("Missing required input(s).");
            }

            try {
              const { data: pr } = await github.rest.pulls.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: prTitle,
                head: sourceBranch,
                base: targetBranch,
                body: prBody
              });
              core.info(`✅ Pull request created: ${pr.html_url}`);
            } catch (error) {
              if (error.status === 422) {
                core.setFailed("❌ A pull request already exists or branch names are invalid.");
              } else {
                core.setFailed(`❌ Error: ${error.message}`);
              }
            }
